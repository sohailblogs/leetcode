class Solution {
    public int countPrimes(int n) {
       if(n <= 2){return 0;}
       int c = 0;
       int[] p = new int[n];
       for(int i = 0; i < n ;i++){
           p[i] = 1;
       }
       for(int i = 2; i*i < n ;i++){
           if(p[i] == 1){
               for(int j = i*i; j < n; j+=i){
                   //if(j >= 0 && j < n){
                        p[j] = 4;
                   //}
               }
           }
       }
       for(int i = 2; i < n  ;i++){
           if(p[i] == 1){
               c++;
               }
       }
       return c;
       
       
    }
}/*
this exceeds the time and space limit
        class Solution {
    public int countPrimes(int n) {
        if(n == 0){return 0;}
        if(n == 1){return 0;}
        if(n == 2){return 0;}
        
        int count = 0;
         for(int i = 2; i<=n ; i++){
            if(isPrime(i)){count++;}
            }
        if(isPrime(n)){if(n % 2 != 0){return count-1;}}
        return count;
        
    }
    boolean isPrime(int n){
        for(int i = 2; i<n ; i++){
            if(n%i == 0){
                return false;
            }
        }
        return true;
    }
}
        */
